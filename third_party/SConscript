# Copyright 2008, Google Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice, 
#     this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#  3. Neither the name of Google Inc. nor the names of its contributors may be
#     used to endorse or promote products derived from this software without
#     specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import os
import shutil
import stat

Import('env')
env = env.Clone()

def CopyFiles(target, source, env):
  for i in range(len(source)):
    shutil.copy(source[i].abspath, target[i].abspath)
    os.chmod(target[i].abspath, stat.S_IWRITE | stat.S_IREAD)

platform = env['PLATFORM']

if platform != 'win32':
  env.Command(['#build/libminizip$LIBSUFFIX'],
              ['zlib-1.2.3.$PLATFORM/lib/libminizip$LIBSUFFIX'],
              CopyFiles)
  # Install minizip:
  env.Install(env['LIBDIR'], 'zlib-1.2.3.$PLATFORM/lib/libminizip$LIBSUFFIX')
else:
  # For windows debug to work, we need to use use the version of the library
  # built with the corresponding CRT.
  if env['DEBUG']:
    env.Command(['#build/minizip$LIBSUFFIX'],
                ['zlib-1.2.3.$PLATFORM/lib/minizip$LIBSUFFIX'],
                CopyFiles)  # TODO: not a debug lib yet.
  else:
    env.Command(['#build/minizip$LIBSUFFIX'],
                ['zlib-1.2.3.$PLATFORM/lib/minizip$LIBSUFFIX'],
                CopyFiles)
  # Install minizip:
  env.Install(env['LIBDIR'], 'zlib-1.2.3.$PLATFORM/lib/minizip$LIBSUFFIX')

